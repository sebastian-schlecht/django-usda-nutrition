# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-09-20 16:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('usda_nutrition', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NutrientData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nutrient_value', models.DecimalField(decimal_places=3, help_text=b'Amount in 100 grams, edible portion. (Nutrient values have been rounded to a specified number of decimal places for each nutrient. Number of decimal places is listed in the Nutrient Definition file.)', max_digits=13)),
                ('number_data_points', models.PositiveSmallIntegerField(help_text=b'Number of data points is the number of analyses used to calculate the nutrient value. If the number of data points is 0, the value was calculated or imputed.')),
                ('standard_error', models.DecimalField(blank=True, decimal_places=3, help_text=b'Standard error of the mean. Null if cannot be calculated. The standard error is also not given if the number of data points is less than three.', max_digits=11, null=True)),
                ('add_nutr_mark', models.NullBooleanField(help_text=b'Indicates a vitamin or mineral added for fortification or enrichment. This field is populated for ready-to- eat breakfast cereals and many brand-name hot cereals in food group 08.')),
                ('num_studies', models.PositiveSmallIntegerField(blank=True, help_text=b'Number of studies.', null=True)),
                ('minimum', models.DecimalField(decimal_places=3, help_text=b'Minimum value.', max_digits=13)),
                ('maximum', models.DecimalField(decimal_places=3, help_text=b'Maximum value.', max_digits=13)),
                ('degrees_of_freedom', models.PositiveSmallIntegerField(blank=True, help_text=b'Degrees of freedom.', null=True)),
                ('lower_error_bound', models.DecimalField(decimal_places=3, help_text=b'Lower 95% error bound.', max_digits=13)),
                ('upper_error_bound', models.DecimalField(decimal_places=3, help_text=b'Upper 95% error bound.', max_digits=13)),
                ('statistical_comments', models.CharField(blank=True, help_text=b'Statistical comments. See definitions below.', max_length=10, null=True)),
                ('modified_date', models.CharField(blank=True, help_text=b'Indicates when a value was either added to the database or last modified.', max_length=10, null=True)),
                ('confidence_code', models.CharField(blank=True, help_text=b'Confidence Code indicating data quality, based on evaluation of sample plan, sample handling, analytical method, analytical quality control, and number of samples analyzed. Not included in this release, but is planned for future releases.', max_length=1, null=True)),
                ('derivation_code', models.ForeignKey(blank=True, help_text=b'Data Derivation Code giving specific information on how the value is determined. This field is populated only for items added or updated starting with SR14. This field may not be populated if older records were used in the calculation of the mean value.', null=True, on_delete=django.db.models.deletion.CASCADE, to='usda_nutrition.DerivationCode')),
                ('food_description', models.ForeignKey(help_text=b'5-digit Nutrient Databank number that uniquely identifies a food item. If this field is defined as numeric, the leading zero will be lost.', on_delete=django.db.models.deletion.CASCADE, to='usda_nutrition.FoodDescription')),
                ('nutrient_definition', models.ForeignKey(help_text=b'Unique 3-digit identifier code for a nutrient.', on_delete=django.db.models.deletion.CASCADE, to='usda_nutrition.NutrientDefinition')),
                ('ref_food_description', models.ForeignKey(blank=True, help_text=b'NDB number of the item used to calculate a missing value. Populated only for items added or updated starting with SR14.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ref_nutrient_data', to='usda_nutrition.FoodDescription')),
                ('source_code', models.ForeignKey(help_text=b'Code indicating type of data.', on_delete=django.db.models.deletion.CASCADE, to='usda_nutrition.SourceCode')),
            ],
        ),
    ]
